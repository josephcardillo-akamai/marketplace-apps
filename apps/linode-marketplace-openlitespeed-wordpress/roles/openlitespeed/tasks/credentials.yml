---
- name: get litespeed password
  ansible.builtin.slurp:
    src: '/root/.litespeed_password'
  register: litespeed_password_encode

- name: Slurp content of /root/.litespeed_password
  ansible.builtin.slurp:
    src: /root/.litespeed_password
  register: litespeed_encoded_password

- name: get db password
  ansible.builtin.slurp:
    src: '/root/.db_password'
  register: db_password_encode

- name: set db & litespeed passwords
  set_fact:
    litespeed_password: "{{ (litespeed_password_encode.content | b64decode).split('=')[1].strip() }}"
    db_password: "{{ db_password_encode.content | b64decode }}"

- name: comment out ssh motd in pam_motd
  ansible.builtin.lineinfile:
    path: /etc/pam.d/sshd
    regexp: '^\s*session\s+optional\s+pam_motd\.so\s+motd=/run/motd\.dynamic$'
    line: '#session    optional     pam_motd.so  motd=/run/motd.dynamic'
    backrefs: yes
  
- name: set mysql root and wordpress user passwords
  set_fact:
    passwords:
      mysql_root_password: "{{ (db_password.split('\n')[0] | regex_replace('.*=\"(.*)\"', '\\1')).strip() }}"
      wordpress_mysql_pass: "{{ (db_password.split('\n')[1] | regex_replace('.*=\"(.*)\"', '\\1')).strip() }}"

- name: write mysql root and wordpress user passwords to vars
  ansible.builtin.lineinfile:
    path: "./group_vars/linode/vars"
    create: yes
    line: "{{ item.key }}: {{ item.value }}"
  loop: "{{ lookup('dict', passwords) }}"